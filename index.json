[{"content":" ","date":"2023-03-05","permalink":"/my-diary-tech/","section":"","summary":" ","title":""},{"content":"","date":"2023-03-05","permalink":"/my-diary-tech/authors/","section":"Authors","summary":"","title":"Authors"},{"content":"","date":"2023-03-05","permalink":"/my-diary-tech/tags/career/","section":"Tags","summary":"","title":"career"},{"content":"","date":"2023-03-05","permalink":"/my-diary-tech/categories/","section":"Categories","summary":"","title":"Categories"},{"content":" Staff Product Manager ","date":"2023-03-05","permalink":"/my-diary-tech/authors/thecw/","section":"Authors","summary":" Staff Product Manager ","title":"ChiaWen Zuo(左佳文)"},{"content":"","date":"2023-03-05","permalink":"/my-diary-tech/tags/organization/","section":"Tags","summary":"","title":"organization"},{"content":"Password\u003e Password # Website Password GitHub zuowen GitHub zuowen ","date":"2023-03-05","permalink":"/my-diary-tech/notes/password_manager/","section":"Posts","summary":"Password management is crucial for protecting personal privacy and assets in the digital age. It involves using strong and unique passwords to secure online accounts and devices, and utilizing secure password management tools to store and manage them. Effective password management reduces the risk of account theft, information leakage, and identity theft.","title":"Password Manager"},{"content":"","date":"2023-03-05","permalink":"/my-diary-tech/categories/product/","section":"Categories","summary":"","title":"Product"},{"content":"","date":"2023-03-05","permalink":"/my-diary-tech/tags/roles/","section":"Tags","summary":"","title":"roles"},{"content":"","date":"2023-03-05","permalink":"/my-diary-tech/tags/","section":"Tags","summary":"","title":"Tags"},{"content":"前言\u003e 前言 # 碰到问题，记住第一件事是 翻阅文档 ，不要一开始就直接搜索或者找人问，翻阅FAQ可能会快速找到答案。\n信息检索，我的理解来说，实际上就是灵活运用搜索引擎中，方便快捷的搜到需要的信息，包括但不限于编程。\n编程最重要的，就是 STFW(search the fucking web) 和 RTFM(read the fucking Manual) ，首先要读文档，第二要学会搜索，网上那么多资源，怎么用，就需要信息检索。\n要搜索，我们首先要搞清楚搜索引擎是如何工作的：\n搜索引擎工作原理\u003e 搜索引擎工作原理 # 搜索引擎的工作过程大体可以分成三阶段：[^1]\n爬行和抓取：搜索引擎蜘蛛通过跟踪链接访问网页，获取网页 HTML 代码存入数据库。 预处理：索引程序对抓取来的网页数据进行文字提取，中文分词，索引等处理，以备排名程序调用。 排名：用户输入关键词后，排名程序调用索引库数据，计算相关性，然后按一定格式生成搜索结果页面。 第一步，就是大家经常听说的网络爬虫，一般 Python 卖课的都会吹这个东西。简单可以理解为，我用一个自动的程序，下载网站中的所有文本、图片等相关信息，然后存入本地的磁盘。\n第二步是搜索引擎的核心，但是对于我们使用来说，并不是特别关键，大致可以理解为洗干净数据，然后入库页面，每个页面加入关键字等信息方便我们查询。\n第三步跟我们息息相关，不管是什么搜索网站， google 、百度、 Bing ，都一样，输入关键字或者需要查询的内容，搜索引擎会给你返回结果。本文就是教你如何获取更好的结果。\n基础搜索技巧\u003e 基础搜索技巧 # 根据上述的工作原理，我们大致就能明白，其实可以把搜索引擎当作一个比较聪明的数据库，更好的使用查询条件就能更快速的找到你想要的信息，下面介绍一些搜索的技巧：\n使用英文\u003e 使用英文 # 首先我们要知道一件事，编程中，最好使用英文搜索。原因主要有几点：\n编程和各种软件操作中，英文资料质量比中文资料和其他语言资料高，英文通用性还是更好些 因为翻译问题，英文的名词比中文准确通用 中文搜索中，分词系统不准会导致歧义，比如 Google 搜中文可能会搜不出几条有用结果 如果你英文不好，用百度翻译或者搜狗翻译，足够了。\n当然下面的文档为了举例方便，都还是用中文例子。\n提炼关键词\u003e 提炼关键词 # 搜索时不要搜索整句话，虽然搜索引擎会自动帮助我们分词检索，但是整句和关键字搜索出来的结果再准确度和顺序上会有很大差别。搜索引擎是机器，并不是你的老师或者同事，看上面的流程，搜索实际上是去检索搜索引擎爬出来的数据库，你可以理解为关键字比模糊检索要快而且准确。\n我们需要提炼问题，确定我们到底需要解决什么问题。\n例如，我想知道 vcpkg 如何集成到工程上而不是全局中，那么搜索 vcpkg如何集成到工程上而不是全局中 这种长句可能无法找到相关的结果，最好是拆分成单词，vcpkg 集成到 工程 全局 这样的搜索。其实这里只是举个例子，针对本条其实都能搜索出相关信息，但是越具体的问题，机器分词越可能出问题，所以最好是拆分关键字，使用词组或者断句来进行搜索。\n替换关键字\u003e 替换关键字 # 还是上面那个例子，如果搜不出来，可以试试把工程换成项目，或者移出集成，如果不行，试一下高级搜索。\n高级搜索\u003e 高级搜索 # 普通搜索引擎一般都支持高级搜索，包括 google ， bing ，百度， ecosia ，等等，大部分都支持，不过可能语法不同，一般通用的表示：\n精准匹配： 精准匹配能保证搜索关键词完全被匹配上，一般是用双引号括起来 比如搜索线性代数，可以在输入框内输入 \u0026ldquo;线性代数\u0026rdquo;，搜索引擎将只匹配完整包含 “线性代数” 的页面，而不会搜索拆分成线性和代数两个词的页面 不包含关键字： 用 - 减号连接关键字，用于排除某些干扰词 包含关键字： 用 + 加号连接关键字 搜索特定文件类型： filetype:pdf 直接搜索 pdf 文件 搜索特定网址： site:stackoverflow.com 只搜索特定网站内的页面 一般可以参照网站说明，比如百度可以参照 高级搜索 ，Bing 可以参照 高级搜索关键字 和 高级搜索选项。\nGitHub 的高级搜索\u003e GitHub 的高级搜索 # 可以直接用 高级搜索页面 进行搜索，也可以参照 Github查询语法 进行查找，简单说几个:\nin:name \u0026lt;关键字\u0026gt; 仓库名称带关键字查询 in:description \u0026lt;关键字\u0026gt; 仓库描述带关键字查询 in:readme \u0026lt;关键字\u0026gt; README 文件带关键字查询 stars(fork): \u0026gt;(=) \u0026lt;数字\u0026gt; \u0026lt;关键字\u0026gt; star 或 fork 数大于(或等于)指定数字的带关键字查询 stars(fork): 10..20 \u0026lt;关键词\u0026gt; star 或 fork 数在 10 到 20 之间的带关键字查询 size:\u0026gt;=5000 \u0026lt;关键词\u0026gt; 限定仓库大于等于 5000K 的带关键字查询 pushed(created):\u0026gt;2019-11-15 \u0026lt;关键字\u0026gt; 更新 或 创建 日期在 2019 年 11 月 16 日之后的带关键字查询 license:apache-2.0 \u0026lt;关键字\u0026gt; LICENSE 为 apache-2.0 的带关键字查询 language:java \u0026lt;关键词\u0026gt; 仓库语言为 Java 的带关键字查询 user:\u0026lt;用户名\u0026gt; 查询某个用户的项目 org:\u0026lt;组织名\u0026gt; 查询某个组织的项目 这些可以混合使用，也可以先查找某一类的 awesome 仓库，然后从 awesome 库里找相关的资源，github 里有很多归纳仓库，可以先看看已有的收集，有时候会节省很多时间 更多技巧\u003e 更多技巧 # 使用中，实际上我会去特定网站找一些问题：\n如果是语言本身相关，比如 c++/Qt/OpenGL 如何实现什么功能，可以直接加上 site:stackoverflow.com 如果是具体的业务/开发环境或者软件相关，可以先在 BugList 、IssueList ，或者相关论坛里先找一下，比如 Qt 的问题就可以直接去 Qt 论坛，QGis 或者 GDAL 相关问题可以在 stackExchange 里去搜 QQ 群也是一个提问的地方，但是需要你提的问题有意义，否则大部分人不会回你，而且 QQ 群回复并不及时。 知乎专栏、简书、博客园、 CSDN 中有大量中文笔记，这些都是别人嚼烂了的东西，基本是别人踩坑的经验 关于百度\u003e 关于百度 # 大部分编程人都会告诉你别用百度，用 Google 或者 Bing 国际版，但是 Bing 中文搜索的准确率并不高， Google 需要科学上网，如果真的需要，可以使用 Ecosia 、 Yandex 之类的搜索引擎。而且中文搜索来说，百度可能还真是最好的。\n百度的问题主要在于排序算法，可能两页都没啥对的内容，但是收录比 Bing 还是好一些的（百度以前并不遵守 robots.txt ，会抓取所有页面，所以有些个人网站甚至专门对百度做了屏蔽），甚至有时候比 Google 好。从数据库来说，百度比 Google 和 Bing 收录的中文内容要多，如果你碰到的时中文相关的问题而且确实找不到相关内容，那么就用百度，搜索引擎是工具，能用好用才是王道。\n代码搜索\u003e 代码搜索 # 我们除了搜索引擎查找问题，还有可能会搜一些代码，可能是自己写的，也可能是项目中的，下面推荐一些工具：\n代码检索有两种，第一是本地的代码检索，第二是要写个啥算法，需要在网上搜索\n本地代码搜索\u003e 本地代码搜索 # ACK 或者 ACK2，老牌搜索工具，perl 写的 The Silver Searcher c 实现的 The Platinum Searcher go 实现的 FreeCommander 自带的搜索，如果是固态硬盘速度还不错 IDE 自带的，搜索有些时候并不太好用 开源代码搜索\u003e 开源代码搜索 # Searchcode 搜索开源代码，速度比较快 一行代码 国产的，有些国产工具很好用 文献检索\u003e 文献检索 # 为什么要使用Google Scholar\u003e 为什么要使用Google Scholar # 谷歌学术是全球最大的学术搜索引擎之一(但是使用它需要科学上网)，拥有数亿篇来自各个学科领域的学术文献。使用它的原因在于：\n全面覆盖：谷歌学术覆盖了来自世界各地各个学科领域的学术文献，包括期刊文章、学位论文、会议论文等，使用户能够轻松找到相关领域的最新研究成果。\n方便快捷：谷歌学术可以提供极快的搜索结果，对于需要快速查找文献的学者、研究人员、学生和其他读者来说非常方便。\n可信度高：谷歌学术检索的文献大多来自被认可的学术出版机构和会议，保证了文献的可信度和准确性。\n引用计数：谷歌学术可以显示每篇文献被引用的次数和被哪些文献所引用，这对于评估研究成果的影响力和重要性非常有帮助。\n免费使用：谷歌学术是一个免费的工具，任何人都可以使用它来查找学术文献。\n因此，谷歌学术在学术界被广泛使用，是进行学术研究的重要工具之一。\n","date":"2023-03-05","permalink":"/my-diary-tech/posts/%E4%BF%A1%E6%81%AF%E6%A3%80%E7%B4%A2/","section":"Posts","summary":"当今数字时代，信息已经成为我们生活中必不可少的一部分。但是，随着信息的爆炸式增长，人们往往会感到困惑和无从下手。信息检索是一种解决这个问题的方法，它是指从大量的信息中找到与特定需求相匹配的信息的过程。信息检索技术不仅在个人生活中有广泛应用，也在企业、学术研究、医疗保健等领域中扮演着重要角色。本文将介绍信息检索的基本原理、常用技术和相关应用，希望对读者了解信息检索有所帮助。","title":"信息检索"},{"content":"下载工具\u003e 下载工具 # Sci-Hub: Elbakyan 女神向你挥手，旨在打破知识壁垒的革命性网站。 Library Genesis: 电子书下载网站。 Z-library: 电子书下载网站（在 Tor 下运行较佳， 链接）。 Z-ePub: ePub 电子书下载网站。 PDF Drive: PDF 电子书搜索引擎。 MagazineLib: PDF 电子杂志下载网站。 BitDownloader: 油管视频下载器。 qBittorrent: BitTorrent 客户端。 uTorrent: BitTorrent 客户端。 全国标准信息公共服务平台：各类标准查询和下载官方平台。 标准知识服务系统：检索与阅读所需标准。 设计工具\u003e 设计工具 # excalidraw: 一款手绘风格的绘图工具，非常适合绘制课程报告或者PPT内的示意图。 tldraw: 一个绘图工具，适合画流程图，架构图等。 origamiway: 手把手教你怎么折纸。 thingiverse: 囊括各类 2D/3D 设计资源，其 STL 文件下载可直接 3D 打印。 iconfont: 国内最大的图标和插画资源库，可用于开发或绘制系统架构图。 turbosquid: 可以购买各式各样的模型。 flaticon: 可下载免费且高质量的图标。 标准地图服务系统: 可以下载官方标准地图。 PlantUML: 可以使用代码快速编写 UML 图。 编程相关\u003e 编程相关 # sqlfiddle: 一个简易的在线 SQL Playground。 sqlzoo：在线练习 sql 语句。 godbolt: 非常方便的编译器探索工具。你可以写一段 C/C++ 代码，选择一款编译器，然后便可以观察生成的具体汇编代码。 explainshell: 你是否曾为一段 shell 代码的具体含义感到困扰？manpage 看半天还是不明所以？试试这个网站！ regex101: 正则表达式调试网站，支持各种编程语言的匹配标准。 typingtom: 针对程序员的打字练习/测速网站。 wrk: 网站压测工具。 gbmb: 数据单位转换。 tools: 在线工具合集。 github1s: 用网页版 VS Code 在线阅读 GitHub 代码。 visualgo: 算法可视化网站。 DataStructureVisual: 数据结构可视化网站。 Data Structure Visualizations: 数据结构与算法的可视化网站。 learngitbranching: 可视化学习 git。 UnicodeCharacter: Unicode 字符集网站。 学习网站\u003e 学习网站 # HFS: 各类软件教程。 os-wiki: 操作系统技术资源百科全书。 Shadertoy: 编写各式各样的 shader。 comments-for-awesome-courses: 名校公开课评价网。 codetop: 企业题库。 cs-video-courses: 带有视频讲座的计算机科学课程列表。 bootlin: 在线阅读 Linux 源码。 ecust-CourseShare: 华东师范大学研究生课程攻略共享计划。 REKCARC-TSC-UHT: 清华大学计算机系课程攻略。 seu-master: 东南大学研究生课程资料整理。 杂项\u003e 杂项 # tophub: 新闻热榜合集（综合了知乎、微博、百度、微信等）。 feedly: 著名的 RSS 订阅源阅读器。 speedtest: 在线网络测速网站。 public-apis: 公共 API 合集列表。 numberempire: 函数求导工具。 sustech-application: 南方科技大学经验分享网。 vim-adventures: 一款基于 vim 键盘快捷键的在线游戏。 vimsnake: 利用 vim 玩贪吃蛇。 keybr: 学习盲打的网站。 ","date":"2023-03-05","permalink":"/my-diary-tech/notes/practical_tools/","section":"Posts","summary":"在日常生活中，我们经常会遇到各种各样的任务和挑战。有时候我们需要一些实用工具来帮助我们更好地完成这些任务。在本文中，我将向您介绍一些我个人认为非常实用的工具，这些工具可以帮助您更好地管理时间，提高生产力，并让您的生活更加轻松和高效。让我们一起探索这些实用工具吧！","title":"实用工具"},{"content":"在现代软件开发过程中，使用适当的工具可以大大提高效率和质量。在这个日新月异的技术领域，学习和掌握一些必备的软件工具是非常重要的。本文将介绍一些被广泛使用且具有重要性的软件工具，包括 WSL2、Vim、Git、GitHub、Docker、Linux、GNU Make等等。通过本文的介绍和指南，您可以了解这些工具的基本概念、用途和优点，并可以开始使用这些工具来提高您的软件开发技能和效率。无论是初学者还是经验丰富的开发人员，本文都将为您提供有价值的信息和指南。\n科学上网\u003e 科学上网 # 此链接出现在这里纯属二进制 bit 的随意组合，与本人毫无关系。\nWSL2\u003e WSL2 # WSL2（Windows Subsystem for Linux 2）是一种在Windows操作系统中使用Linux内核的虚拟化技术。它可以在Windows环境下运行Linux应用程序，并且与Windows应用程序无缝集成。WSL2是WSL的升级版本，它采用了虚拟化技术，可以更好地支持Linux内核，并提供了更好的性能和兼容性。WSL2与Docker和Kubernetes等容器化技术集成得非常好，可以方便地在Windows环境下进行开发和部署。\n为什么要使用WSL2\u003e 为什么要使用WSL2 # Linux操作系统是广泛使用的开源操作系统，其开放性可以帮助开发人员更好地理解系统的内部工作原理，并从中受益。同时，由于开源软件的安全性和可靠性更高，使用Linux操作系统可以避免由于国际关系带来的安全问题。\n在现代软件开发中，服务器和嵌入式设备都广泛使用Linux操作系统，因此熟练掌握Linux开发对于开发人员来说是必不可少的。使用WSL2可以让Windows用户在自己熟悉的环境下享受到Linux操作系统的强大功能和工具，这对于那些需要在Windows系统和Linux系统之间频繁切换的开发人员来说尤为重要。通过使用WSL2，开发人员可以轻松地进行Linux开发，并使用Linux环境中的工具和库来构建应用程序。\n因此，WSL2是一种强大而有用的工具，可以帮助开发人员更好地理解和使用Linux操作系统，提高其在软件开发领域的技能和竞争力，同时也提高了系统的安全性和可靠性。\n如何安装和使用WSL2\u003e 如何安装和使用WSL2 # 可以参考 https://learn.microsoft.com/zh-cn/windows/wsl/install\nVim\u003e Vim # 为什么学习 Vim\u003e 为什么学习 Vim # 在我看来 Vim 编辑器有如下的好处：\n让你的整个开发过程手指不需要离开键盘，而且光标的移动不需要方向键使得你的手指一直处在打字的最佳位置。 方便的文件切换以及面板控制可以让你同时开发多份文件甚至同一个文件的不同位置。 Vim 的宏操作可以批量化处理重复操作（例如多行 tab，批量加双引号等等） Vim 是很多服务器自带的命令行编辑器，当你通过 ssh 连接远程服务器之后，由于没有图形界面，只能在命令行里进行开发（当然现在很多 IDE 如 PyCharm 提供了 ssh 插件可以解决这个问题）。 异常丰富的插件生态，让你拥有世界上最花里胡哨的命令行编辑器。 如何学习 Vim\u003e 如何学习 Vim # 不幸的是 Vim 的学习曲线确实相当陡峭，我花了好几个星期才慢慢适应了用 Vim 进行开发的过程。最开始你会觉得非常不适应，但一旦熬过了初始阶段，相信我，你会爱上 Vim。\nVim 的学习资料浩如烟海，但掌握它最好的方式还是将它用在日常的开发过程中，而不是一上来就去学各种花里胡哨的高级 Vim 技巧。个人推荐的学习路线如下：\n先阅读 这篇 tutorial，掌握基本的 Vim 概念和使用方式。 用 Vim 自带的 vimtutor 进行练习，安装完 Vim 之后直接在命令行里输入 vimtutor 即可进入练习程序。 最后就是强迫自己使用 Vim 进行开发，IDE 里可以安装 Vim 插件。 等你完全适应 Vim 之后新的世界便向你敞开了大门，你可以按需配置自己的 Vim（修改Vim配置文件），网上有数不胜数的资源可以借鉴。 如果你想对配置 Vim 有更加深入的了解， Learn Vim Script the Hard Way 是一个很好的资源。 推荐参考资料\u003e 推荐参考资料 # 以下是一些学习 Vim 的资源：\nVim 官方文档： http://vimdoc.sourceforge.net/htmldoc/ Vim 常用命令速查表： https://vim.rtorr.com/ Vimtutor 教程：在终端输入 vimtutor 即可开始学习。 Git\u003e Git # 为什么使用 Git\u003e 为什么使用 Git # Git 是一款分布式的代码版本控制工具，Linux 之父 Linus 嫌弃当时主流的中心式的版本控制工具太难用还要花钱，就自己开发出了 Git 用来维护 Linux 的版本（给大佬跪了）。\nGit 的设计非常优雅，但初学者通常因为很难理解其内部逻辑因此会觉得非常难用。对 Git 不熟悉的初学者很容易出现因为误用命令将代码给控制版本控制没了的状况（好吧是我）。\n但相信我，和 Vim 一样，Git 是一款你最终掌握之后会感叹“它值得！”的神器。\n如何学习 Git\u003e 如何学习 Git # 和 Vim 不同，我不建议初学者在一知半解的情况下贸然使用 Git，因为它的内部逻辑并不能熟能生巧，而是需要花时间去理解。我推荐的学习路线如下：\n阅读这篇 Git tutorial，视频的话可以看这个 尚硅谷Git教程 阅读这本开源书籍 Pro Git 的 Chapter1 - Chapter5，是的没错，学 Git 需要读一本书（捂脸）。 此时你已经掌握了 Git 的原理和绝大部分用法，接下来就可以在实践中反复巩固 Git 的命令了。但用好它同样是一门哲学，我个人觉得这篇 如何写好 Commit Message 的博客非常值得一读。 好的此时你已经爱上了 Git，你已经不满足于学会它了，你想自己实现一个 Git！巧了，我当年也有这样的想法， 这篇 tutorial 可以满足你！ 什么？光实现一个 Git 无法满足你？小伙子/小仙女有前途，巧的是我也喜欢造轮子，这两个 GitHub 项目 build-your-own-x 和 project-based-learning 收录了你能想到的各种造轮子教程，比如：自己造个编辑器、自己写个虚拟机、自己写个 docker、自己写个 TCP 等等等等。 GitHub\u003e GitHub # GitHub 是什么\u003e GitHub 是什么 # 从功能上来说，GitHub 是一个在线代码托管平台。你可以将你的本地 Git 仓库托管到 GitHub 上，供多人同时开发浏览。但现如今 GitHub 的意义已远不止如此，它已经演变为一个非常活跃且资源极为丰富的开源交流社区。全世界的软件开发者在 GitHub 上分享各式各样种类繁多的开源软件。大到工业级的深度学习框架 PyTorch, TensorFlow，小到几十行的实用脚本，既有硬核的知识分享，也有保姆级的教程指导，甚至很多技术书籍也在 GitHub上开源（例如诸位正在看的这本——如果我厚着脸皮勉强称之为书的话）。闲来无事逛逛 GitHub 已经成为了我日常生活的一部分。\n在 GitHub 里，星星是对一个项目至高无上的肯定，如果你觉得这本书对你有用的话，欢迎通过右上角的链接进入仓库主页献出你宝贵的星星✨。\n如何使用 GitHub\u003e 如何使用 GitHub # 如果你还从未在 GitHub 上建立过自己的远程仓库，也没有克隆过别人的代码，那么我建议你从 GitHub的官方教程开始自己的开源之旅。\n如果你想时刻关注 GitHub 上一些有趣的开源项目，那么我向你重磅推荐 HelloGitHub 这个网站以及它的同名微信公众号。它会定期收录 GitHub 上近期开始流行的或者非常有趣的开源项目，让你有机会第一时间接触各类优质资源。\nGitHub 之所以成功，我想是得益于“我为人人，人人为我”的开源精神，得益于知识分享的快乐。如果你也想成为下一个万人敬仰的开源大佬，或者下一个 star 破万的项目作者。那就把你在开发过程中灵感一现的 idea 化作代码，展示在 GitHub 上吧～\n不过需要提醒的是，开源社区不是法外之地，很多开源软件并不是可以随意复制分发甚至贩卖的，了解各类 开源协议并遵守，不仅是法律的要求，更是每个开源社区成员的责任。\nDocker\u003e Docker # 为什么使用 Docker\u003e 为什么使用 Docker # 使用别人写好的软件/工具最大的障碍是什么——必然是配环境。配环境带来的折磨会极大地消解你对软件、编程本身的兴趣。虚拟机可以解决配环境的一部分问题，但它庞大笨重，且为了某个应用的环境配置好像也不值得模拟一个全新的操作系统。\nDocker 的出现让环境配置变得（或许）不再折磨。简单来说 Docker 使用轻量级的“容器”（container）而不是整个操作系统去支持一个应用的配置。应用自身连同它的环境配置被打包为一个个 image 可以自由运行在不同平台的一个个 container 中，这极大地节省了所有人的时间成本。\n如何学习 Docker\u003e 如何学习 Docker # Docker 官方文档当然是最好的初学教材，但最好的导师一定是你自己——尝试去使用 Docker 才能享受它带来的便利。Docker 在工业界发展迅猛并已经非常成熟，你可以下载它的桌面端并使用图形界面。\n当然，如果你像我一样，是一个疯狂的造轮子爱好者，那不妨自己亲手写一个 迷你 Docker 来加深理解。\nKodeKloud Docker for the Absolute Beginner 全面的介绍了 Docker 的基础功能，并且有大量的配套练习，同时提供免费的云环境来完成练习。其余的云相关的课程如 Kubernetes 需要付费，但个人强烈推荐：讲解非常仔细，适合从 0 开始的新手；有配套的 Kubernetes 的实验环境，不用被搭建环境劝退。\nLinux\u003e Linux # Linux 是一款开源的操作系统，它被广泛用于服务器和嵌入式设备。对于软件开发人员来说，熟悉 Linux 系统是必不可少的。\n推荐参考资料\u003e 推荐参考资料 # 以下是一些学习 Linux 的资源：\nLinux 命令行教程： https://linuxcommand.org/ Linux 教程： https://www.linux.com/what-is-linux/ Linux 发行版： https://distrowatch.com/ GNU Make\u003e GNU Make # 为什么学 GNU Make\u003e 为什么学 GNU Make # GNU Make 是一款构建自动化工具，它能够自动化编译、打包、测试等任务。在软件开发中，Makefile 通常用于编译和构建应用程序。以下是一些学习 GNU Make 的资源：\n如何学习 GNU Make\u003e 如何学习 GNU Make # 这里有一篇写得深入浅出的 文档供大家参考。\nGNU Make 掌握起来相对容易，但用好它需要不断的练习。将它融入到自己的日常开发中，勤于学习和模仿其他优秀开源项目里的 Makefile 的写法，总结出适合自己的 template，久而久之，你对 GNU Make 的使用会愈加纯熟。\n推荐参考资料\u003e 推荐参考资料 # GNU Make 官方文档： https://www.gnu.org/software/make/manual/ Makefile 教程： https://makefiletutorial.com/ Makefile 示例： https://github.com/mbcrawfo/GNU-Make-Examples ","date":"2023-03-05","permalink":"/my-diary-tech/posts/202303-%E5%BF%85%E5%AD%A6%E5%B7%A5%E5%85%B7/","section":"Posts","summary":"在现代软件开发过程中，使用适当的工具可以大大提高效率和质量。在这个日新月异的技术领域，学习和掌握一些必备的软件工具是非常重要的。本文将介绍一些被广泛使用且具有重要性的软件工具，包括 WSL2、Vim、Git、GitHub、Docker、Linux、GNU Make等等。通过本文的介绍和指南，您可以了解这些工具的基本概念、用途和优点，并可以开始使用这些工具来提高您的软件开发技能和效率。无论是初学者还是经验丰富的开发人员，本文都将为您提供有价值的信息和指南。","title":"必学工具"},{"content":"Experience\u003e Experience Company Link Role Dates Location Education\u003e Education School Link Degree Date 长沙理工大学 动力工程及过程热物理 2022-2025 长沙理工大学 新能源科学与工程 2018-2022 Projects\u003e Projects Title Description Link 大型充油变电设备智能监测与异常预警系统 github Honor\u003e Honor ","date":"2022-06-13","permalink":"/my-diary-tech/resume/","section":"","summary":"Experience\u003e Experience Company Link Role Dates Location Education\u003e Education School Link Degree Date 长沙理工大学 动力工程及过程热物理 2022-2025 长沙理工大学 新能源科学与工程 2018-2022 Projects\u003e Projects Title Description Link 大型充油变电设备智能监测与异常预警系统 github Honor\u003e Honor ","title":"Resume"},{"content":"I\u0026rsquo;m a graduate student at Changsha University of Science and Technology, currently engaged in research on data-driven industrial equipment fault diagnosis.\nI have a solid theoretical foundation and extensive practical experience in fields such as machine learning and data mining. I am proficient in commonly used programming languages and tools such as Python, MATLAB, TensorFlow, and can flexibly apply them to data processing and model building.\nIn the past research and practice, I have participated in multiple projects, including fault diagnosis, fault prediction, anomaly detection, etc., accumulating rich experience. My research results have been published in multiple international conferences and journals and have been recognized by peers in the industry.\nI have a strong passion and pursuit for academic research, dedicated to applying my research results to practical production and industrial applications, and making contributions to society. I hope to continuously improve my research level and practical ability through continuous learning and practice, and become an excellent engineer and scholar.\nThank you for reading. If you have any further questions or needs, please feel free to contact me at any time.\nFeel free to reach out.\n","date":"2022-06-13","permalink":"/my-diary-tech/about/","section":"","summary":"I\u0026rsquo;m a graduate student at Changsha University of Science and Technology, currently engaged in research on data-driven industrial equipment fault diagnosis.\nI have a solid theoretical foundation and extensive practical experience in fields such as machine learning and data mining.","title":"About"},{"content":"","date":"2022-06-13","permalink":"/my-diary-tech/notes/","section":"Posts","summary":"","title":"Posts"},{"content":"","date":"2022-06-13","permalink":"/my-diary-tech/posts/","section":"Posts","summary":"","title":"Posts"},{"content":" A friendly (for now) AI ","date":"0001-01-01","permalink":"/my-diary-tech/authors/artbyaghost/","section":"Authors","summary":" A friendly (for now) AI ","title":"Art by a Ghost"},{"content":" Software Engineer ","date":"0001-01-01","permalink":"/my-diary-tech/authors/davidsimao/","section":"Authors","summary":" Software Engineer ","title":"David Simão"},{"content":" Staff Product Manager ","date":"0001-01-01","permalink":"/my-diary-tech/authors/nunocoracao/","section":"Authors","summary":" Staff Product Manager ","title":"Nuno Coração"},{"content":"tbd\n","date":"0001-01-01","permalink":"/my-diary-tech/suggestions/","section":"Recs","summary":"tbd","title":"Recs"},{"content":"","date":"0001-01-01","permalink":"/my-diary-tech/series/","section":"Series","summary":"","title":"Series"}]